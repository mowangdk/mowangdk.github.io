---
layout: post
title:  "weekly report"
date:   2022-05-28 22:30:08 +0800
categories: weeklyreport
---

# 读书

这周还是继续读 Understanding Linux Network Internals 这本书, 第四章主要介绍了 Notification Chain , 主要讲了内核的不同 subsystem 之间的通讯方式,这个 NotificationChain 是由一个链表组成,链表的每一个节点都是一个 struct, 这个 struct 包含优先级, Notification method 等元素. struct 结构之间按照优先级排序, 优先级高的先被触发. 第四章并没有什么特别值得留意的,简单过一遍就可以了


# 日常
### NFS

今天听存储侧同学分享了他们做的事情, 他们的存储是基于 NFS 协议的网络文件存储. 目前要转换网络方案, 但是有一个点比较麻烦,就是 NFS 是非自定协议, 无法携带相关自定义信息(其实对这一点我是有些疑问的, NFS 是基于 TCP/UDP 的网络文件存储协议, 为啥没有一个 options 字段来携带相关自定义信息呢?), 那么想要在 NFS 基础上实现自定义的功能的话就产生了以下两个方案

- 将 nfs 协议包裹起来, 用上层协议将其包裹后发出, 这样我们就可以在上层协议上面加自定义参数了
- 将 nfs 完全替换掉, 同样也可以实现上述需求

第一种方式, 可以通过特定的进程拦截指定 socket 的流量, 将普通的四层流量加上应用层的协议,然后再通过 socket 发出
第二种方式, 就需要完全自己编写网络存储协议了, 

总结
大致还是选择第一种, 尽管有一些性能损失,不过应该再可接受范围之内, 第二种自研则是
不建议, 因为大部分 linux 并不支持这种协议.需要额外安装.并且 nfs 从开发到现在已经发展 40 多年了. 要把它们的坑重新踩一遍这个工作量简直不要太大.

### 加解密及签名工作

总所周知, 加解密是十分耗费 CPU 资源的, 那么该如何降低这部分成本, 可以考虑用专门的硬件来处理, 将 cpu 从计算签名,秘钥的工作中解放出来
